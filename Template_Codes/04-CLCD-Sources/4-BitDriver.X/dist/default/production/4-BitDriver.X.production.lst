

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Sep 25 10:14:45 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0000                     	;# 
   173     0001                     	;# 
   174     0002                     	;# 
   175     0003                     	;# 
   176     0004                     	;# 
   177     0005                     	;# 
   178     0006                     	;# 
   179     0007                     	;# 
   180     0008                     	;# 
   181     0009                     	;# 
   182     000A                     	;# 
   183     000B                     	;# 
   184     000C                     	;# 
   185     000D                     	;# 
   186     000E                     	;# 
   187     000E                     	;# 
   188     000F                     	;# 
   189     0010                     	;# 
   190     0011                     	;# 
   191     0012                     	;# 
   192     0013                     	;# 
   193     0014                     	;# 
   194     0015                     	;# 
   195     0015                     	;# 
   196     0016                     	;# 
   197     0017                     	;# 
   198     0018                     	;# 
   199     0019                     	;# 
   200     001A                     	;# 
   201     001B                     	;# 
   202     001B                     	;# 
   203     001C                     	;# 
   204     001D                     	;# 
   205     001E                     	;# 
   206     001F                     	;# 
   207     0081                     	;# 
   208     0085                     	;# 
   209     0086                     	;# 
   210     0087                     	;# 
   211     0088                     	;# 
   212     0089                     	;# 
   213     008C                     	;# 
   214     008D                     	;# 
   215     008E                     	;# 
   216     0091                     	;# 
   217     0092                     	;# 
   218     0093                     	;# 
   219     0094                     	;# 
   220     0098                     	;# 
   221     0099                     	;# 
   222     009C                     	;# 
   223     009D                     	;# 
   224     009E                     	;# 
   225     009F                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232     0008                     _PORTD	set	8
   233     0049                     _RE1	set	73
   234     004A                     _RE2	set	74
   235     0088                     _TRISD	set	136
   236     0449                     _TRISE1	set	1097
   237     044A                     _TRISE2	set	1098
   238                           
   239                           	psect	strings
   240     0003                     __pstrings:
   241     0003                     stringtab:
   242     0003                     __stringtab:
   243     0003                     stringcode:	
   244                           ;	String table - string pointers are 1 byte each
   245                           
   246     0003                     stringdir:
   247     0003  3000               	movlw	high stringdir
   248     0004  008A               	movwf	10
   249     0005  0804               	movf	4,w
   250     0006  0A84               	incf	4,f
   251     0007  0782               	addwf	2,f
   252     0008                     __stringbase:
   253     0008  3400               	retlw	0
   254     0009                     __end_of__stringtab:
   255     0009                     STR_2:
   256     0009  3457               	retlw	87	;'W'
   257     000A  346F               	retlw	111	;'o'
   258     000B  3472               	retlw	114	;'r'
   259     000C  346C               	retlw	108	;'l'
   260     000D  3464               	retlw	100	;'d'
   261     000E  3400               	retlw	0
   262     000F                     STR_1:
   263     000F  3448               	retlw	72	;'H'
   264     0010  3465               	retlw	101	;'e'
   265     0011  346C               	retlw	108	;'l'
   266     0012  346C               	retlw	108	;'l'
   267     0013  346F               	retlw	111	;'o'
   268     0014  3400               	retlw	0
   269                           
   270                           	psect	cinit
   271     07FC                     start_initialization:	
   272                           ; #config settings
   273                           
   274     07FC                     __initialization:
   275     07FC                     end_of_initialization:	
   276                           ;End of C runtime variable initialization code
   277                           
   278     07FC                     __end_of__initialization:
   279     07FC  0183               	clrf	3
   280     07FD  120A  118A  2F3A   	ljmp	_main	;jump to C main() function
   281                           
   282                           	psect	cstackCOMMON
   283     0070                     __pcstackCOMMON:
   284     0070                     ?_clcd_write:
   285     0070                     ?_init_display_controller:	
   286                           ; 1 bytes @ 0x0
   287                           
   288     0070                     ?_init_clcd:	
   289                           ; 1 bytes @ 0x0
   290                           
   291     0070                     ?_init_config:	
   292                           ; 1 bytes @ 0x0
   293                           
   294     0070                     ?_main:	
   295                           ; 1 bytes @ 0x0
   296                           
   297     0070                     clcd_write@mode:	
   298                           ; 1 bytes @ 0x0
   299                           
   300                           
   301                           ; 1 bytes @ 0x0
   302     0070                     	ds	1
   303     0071                     ??_clcd_write:
   304                           
   305                           ; 1 bytes @ 0x1
   306     0071                     	ds	2
   307     0073                     clcd_write@byte:
   308                           
   309                           ; 1 bytes @ 0x3
   310     0073                     	ds	1
   311     0074                     ??_init_display_controller:
   312     0074                     ?_clcd_putch:	
   313                           ; 1 bytes @ 0x4
   314                           
   315     0074                     ?_clcd_print:	
   316                           ; 1 bytes @ 0x4
   317                           
   318     0074                     clcd_putch@addr:	
   319                           ; 1 bytes @ 0x4
   320                           
   321     0074                     clcd_print@addr:	
   322                           ; 1 bytes @ 0x4
   323                           
   324                           
   325                           ; 1 bytes @ 0x4
   326     0074                     	ds	1
   327     0075                     ??_clcd_putch:
   328     0075                     ??_clcd_print:	
   329                           ; 1 bytes @ 0x5
   330                           
   331     0075                     clcd_putch@data:	
   332                           ; 1 bytes @ 0x5
   333                           
   334     0075                     clcd_print@str:	
   335                           ; 1 bytes @ 0x5
   336                           
   337                           
   338                           ; 1 bytes @ 0x5
   339     0075                     	ds	1
   340     0076                     ??_init_clcd:
   341     0076                     ??_init_config:	
   342                           ; 1 bytes @ 0x6
   343                           
   344     0076                     ??_main:	
   345                           ; 1 bytes @ 0x6
   346                           
   347                           
   348                           	psect	maintext
   349     073A                     __pmaintext:	
   350                           ; 1 bytes @ 0x6
   351 ;;
   352 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   353 ;;
   354 ;; *************** function _main *****************
   355 ;; Defined at:
   356 ;;		line 14 in file "main.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   365 ;; Tracked objects:
   366 ;;		On entry : B00/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   370 ;;      Params:         0       0       0       0       0
   371 ;;      Locals:         0       0       0       0       0
   372 ;;      Temps:          0       0       0       0       0
   373 ;;      Totals:         0       0       0       0       0
   374 ;;Total ram usage:        0 bytes
   375 ;; Hardware stack levels required when called: 4
   376 ;; This function calls:
   377 ;;		_clcd_print
   378 ;;		_clcd_putch
   379 ;;		_init_config
   380 ;; This function is called by:
   381 ;;		Startup code after reset
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385     073A                     _main:	
   386                           ;psect for function _main
   387                           
   388     073A                     l775:	
   389                           ;incstack = 0
   390                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   391                           
   392                           
   393                           ;main.c: 15: }
   394     073A  120A  118A  26F0  120A  118A  	fcall	_init_config
   395     073F                     l46:
   396     073F  3084               	movlw	132
   397     0740  00F4               	movwf	clcd_putch@addr
   398     0741  3035               	movlw	53
   399     0742  120A  118A  2701  120A  118A  	fcall	_clcd_putch
   400     0747                     l777:
   401     0747  30C4               	movlw	196
   402     0748  00F4               	movwf	clcd_print@addr
   403     0749  3007               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   404     074A  120A  118A  2712  120A  118A  	fcall	_clcd_print
   405     074F                     l779:
   406     074F  3094               	movlw	148
   407     0750  00F4               	movwf	clcd_putch@addr
   408     0751  3034               	movlw	52
   409     0752  120A  118A  2701  120A  118A  	fcall	_clcd_putch
   410     0757  30D4               	movlw	212
   411     0758  00F4               	movwf	clcd_print@addr
   412     0759  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   413     075A  120A  118A  2712  120A  118A  	fcall	_clcd_print
   414     075F  2F3F               	goto	l46
   415     0760  120A  118A  2800   	ljmp	start
   416     0763                     __end_of_main:
   417                           
   418                           	psect	text1
   419     06F0                     __ptext1:	
   420 ;; *************** function _init_config *****************
   421 ;; Defined at:
   422 ;;		line 10 in file "main.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0, pclath, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   436 ;;      Params:         0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0
   438 ;;      Temps:          0       0       0       0       0
   439 ;;      Totals:         0       0       0       0       0
   440 ;;Total ram usage:        0 bytes
   441 ;; Hardware stack levels used: 1
   442 ;; Hardware stack levels required when called: 3
   443 ;; This function calls:
   444 ;;		_init_clcd
   445 ;; This function is called by:
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450     06F0                     _init_config:	
   451                           ;psect for function _init_config
   452                           
   453     06F0                     l773:	
   454                           ;incstack = 0
   455                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   456                           
   457                           
   458                           ;main.c: 11:         clcd_putch(4 + '0', (0x90 + 4));
   459     06F0  120A  118A  26F6  120A  118A  	fcall	_init_clcd
   460     06F5                     l41:
   461     06F5  0008               	return
   462     06F6                     __end_of_init_config:
   463                           
   464                           	psect	text2
   465     06F6                     __ptext2:	
   466 ;; *************** function _init_clcd *****************
   467 ;; Defined at:
   468 ;;		line 44 in file "clcd.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg, status,2, status,0, pclath, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         0       0       0       0       0
   484 ;;      Temps:          0       0       0       0       0
   485 ;;      Totals:         0       0       0       0       0
   486 ;;Total ram usage:        0 bytes
   487 ;; Hardware stack levels used: 1
   488 ;; Hardware stack levels required when called: 2
   489 ;; This function calls:
   490 ;;		_init_display_controller
   491 ;; This function is called by:
   492 ;;		_init_config
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496     06F6                     _init_clcd:	
   497                           ;psect for function _init_clcd
   498                           
   499     06F6                     l755:	
   500                           ;incstack = 0
   501                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
   502                           
   503                           
   504                           ;clcd.c: 47:     TRISD = 0x00;
   505     06F6  1683               	bsf	3,5	;RP0=1, select bank1
   506     06F7  1303               	bcf	3,6	;RP1=0, select bank1
   507     06F8  0188               	clrf	8	;volatile
   508     06F9                     l757:
   509                           
   510                           ;clcd.c: 50:     TRISE2 = 0;
   511     06F9  1109               	bcf	9,2	;volatile
   512     06FA                     l759:
   513                           
   514                           ;clcd.c: 51:     TRISE1 = 0;
   515     06FA  1089               	bcf	9,1	;volatile
   516     06FB                     l761:
   517                           
   518                           ;clcd.c: 53:     init_display_controller();
   519     06FB  120A  118A  2799  120A  118A  	fcall	_init_display_controller
   520     0700                     l23:
   521     0700  0008               	return
   522     0701                     __end_of_init_clcd:
   523                           
   524                           	psect	text3
   525     0799                     __ptext3:	
   526 ;; *************** function _init_display_controller *****************
   527 ;; Defined at:
   528 ;;		line 21 in file "clcd.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0
   544 ;;      Temps:          2       0       0       0       0
   545 ;;      Totals:         2       0       0       0       0
   546 ;;Total ram usage:        2 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; Hardware stack levels required when called: 1
   549 ;; This function calls:
   550 ;;		_clcd_write
   551 ;; This function is called by:
   552 ;;		_init_clcd
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556     0799                     _init_display_controller:	
   557                           ;psect for function _init_display_controller
   558                           
   559     0799                     l731:	
   560                           ;incstack = 0
   561                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   562                           
   563                           
   564                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
   565     0799  30C3               	movlw	195
   566     079A  00F5               	movwf	??_init_display_controller+1
   567     079B  30CD               	movlw	205
   568     079C  00F4               	movwf	??_init_display_controller
   569     079D                     u97:
   570     079D  0BF4               	decfsz	??_init_display_controller,f
   571     079E  2F9D               	goto	u97
   572     079F  0BF5               	decfsz	??_init_display_controller+1,f
   573     07A0  2F9D               	goto	u97
   574     07A1                     l733:
   575                           
   576                           ;clcd.c: 27:     clcd_write(0x33, 0);
   577     07A1  01F0               	clrf	clcd_write@mode
   578     07A2  3033               	movlw	51
   579     07A3  120A  118A  2763  120A  118A  	fcall	_clcd_write
   580     07A8                     l735:
   581                           
   582                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   583     07A8  301B               	movlw	27
   584     07A9  00F5               	movwf	??_init_display_controller+1
   585     07AA  309E               	movlw	158
   586     07AB  00F4               	movwf	??_init_display_controller
   587     07AC                     u107:
   588     07AC  0BF4               	decfsz	??_init_display_controller,f
   589     07AD  2FAC               	goto	u107
   590     07AE  0BF5               	decfsz	??_init_display_controller+1,f
   591     07AF  2FAC               	goto	u107
   592     07B0  0000               	nop
   593                           
   594                           ;clcd.c: 29:     clcd_write(0x33, 0);
   595     07B1  01F0               	clrf	clcd_write@mode
   596     07B2  3033               	movlw	51
   597     07B3  120A  118A  2763  120A  118A  	fcall	_clcd_write
   598     07B8                     l737:
   599                           
   600                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   601     07B8  30A6               	movlw	166
   602     07B9  00F4               	movwf	??_init_display_controller
   603     07BA                     u117:
   604     07BA  0BF4               	decfsz	??_init_display_controller,f
   605     07BB  2FBA               	goto	u117
   606     07BC  0000               	nop
   607     07BD                     l739:
   608                           
   609                           ;clcd.c: 31:     clcd_write(0x33, 0);
   610     07BD  01F0               	clrf	clcd_write@mode
   611     07BE  3033               	movlw	51
   612     07BF  120A  118A  2763  120A  118A  	fcall	_clcd_write
   613     07C4                     l741:
   614                           
   615                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
   616     07C4  2FC5               	nop2	;2 cycle nop
   617     07C5  2FC6               	nop2	;2 cycle nop
   618     07C6  0000               	nop
   619     07C7                     l743:
   620                           
   621                           ;clcd.c: 34:     clcd_write(0x02, 0);
   622     07C7  01F0               	clrf	clcd_write@mode
   623     07C8  3002               	movlw	2
   624     07C9  120A  118A  2763  120A  118A  	fcall	_clcd_write
   625     07CE                     l745:
   626                           
   627                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   628     07CE  30A6               	movlw	166
   629     07CF  00F4               	movwf	??_init_display_controller
   630     07D0                     u127:
   631     07D0  0BF4               	decfsz	??_init_display_controller,f
   632     07D1  2FD0               	goto	u127
   633     07D2  0000               	nop
   634                           
   635                           ;clcd.c: 36:     clcd_write(0x28, 0);
   636     07D3  01F0               	clrf	clcd_write@mode
   637     07D4  3028               	movlw	40
   638     07D5  120A  118A  2763  120A  118A  	fcall	_clcd_write
   639     07DA                     l747:
   640                           
   641                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   642     07DA  30A6               	movlw	166
   643     07DB  00F4               	movwf	??_init_display_controller
   644     07DC                     u137:
   645     07DC  0BF4               	decfsz	??_init_display_controller,f
   646     07DD  2FDC               	goto	u137
   647     07DE  0000               	nop
   648     07DF                     l749:
   649                           
   650                           ;clcd.c: 38:     clcd_write(0x01, 0);
   651     07DF  01F0               	clrf	clcd_write@mode
   652     07E0  3001               	movlw	1
   653     07E1  120A  118A  2763  120A  118A  	fcall	_clcd_write
   654                           
   655                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
   656     07E6  3004               	movlw	4
   657     07E7  00F5               	movwf	??_init_display_controller+1
   658     07E8  303D               	movlw	61
   659     07E9  00F4               	movwf	??_init_display_controller
   660     07EA                     u147:
   661     07EA  0BF4               	decfsz	??_init_display_controller,f
   662     07EB  2FEA               	goto	u147
   663     07EC  0BF5               	decfsz	??_init_display_controller+1,f
   664     07ED  2FEA               	goto	u147
   665     07EE  2FEF               	nop2
   666     07EF                     l751:
   667                           
   668                           ;clcd.c: 40:     clcd_write(0x0C, 0);
   669     07EF  01F0               	clrf	clcd_write@mode
   670     07F0  300C               	movlw	12
   671     07F1  120A  118A  2763  120A  118A  	fcall	_clcd_write
   672     07F6                     l753:
   673                           
   674                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   675     07F6  30A6               	movlw	166
   676     07F7  00F4               	movwf	??_init_display_controller
   677     07F8                     u157:
   678     07F8  0BF4               	decfsz	??_init_display_controller,f
   679     07F9  2FF8               	goto	u157
   680     07FA  0000               	nop
   681     07FB                     l20:
   682     07FB  0008               	return
   683     07FC                     __end_of_init_display_controller:
   684                           
   685                           	psect	text4
   686     0701                     __ptext4:	
   687 ;; *************** function _clcd_putch *****************
   688 ;; Defined at:
   689 ;;		line 56 in file "clcd.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;  data            1    wreg     const unsigned char 
   692 ;;  addr            1    4[COMMON] unsigned char 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  data            1    5[COMMON] const unsigned char 
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0, pclath, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         1       0       0       0       0
   705 ;;      Locals:         1       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0
   707 ;;      Totals:         2       0       0       0       0
   708 ;;Total ram usage:        2 bytes
   709 ;; Hardware stack levels used: 1
   710 ;; Hardware stack levels required when called: 1
   711 ;; This function calls:
   712 ;;		_clcd_write
   713 ;; This function is called by:
   714 ;;		_main
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718     0701                     _clcd_putch:	
   719                           ;psect for function _clcd_putch
   720                           
   721                           
   722                           ;incstack = 0
   723                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
   724                           ;clcd_putch@data stored from wreg
   725     0701  00F5               	movwf	clcd_putch@data
   726     0702                     l763:
   727                           
   728                           ;clcd.c: 56: void clcd_putch(const char data, unsigned char addr);clcd.c: 57: {;clcd.c: 
      +                          58:     clcd_write(addr, 0);
   729     0702  01F0               	clrf	clcd_write@mode
   730     0703  0874               	movf	clcd_putch@addr,w
   731     0704  120A  118A  2763  120A  118A  	fcall	_clcd_write
   732                           
   733                           ;clcd.c: 59:     clcd_write(data, 1);
   734     0709  01F0               	clrf	clcd_write@mode
   735     070A  0AF0               	incf	clcd_write@mode,f
   736     070B  0875               	movf	clcd_putch@data,w
   737     070C  120A  118A  2763  120A  118A  	fcall	_clcd_write
   738     0711                     l26:
   739     0711  0008               	return
   740     0712                     __end_of_clcd_putch:
   741                           
   742                           	psect	text5
   743     0712                     __ptext5:	
   744 ;; *************** function _clcd_print *****************
   745 ;; Defined at:
   746 ;;		line 62 in file "clcd.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  str             1    wreg     PTR const unsigned char 
   749 ;;		 -> STR_2(6), STR_1(6), 
   750 ;;  addr            1    4[COMMON] unsigned char 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  str             1    5[COMMON] PTR const unsigned char 
   753 ;;		 -> STR_2(6), STR_1(6), 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         1       0       0       0       0
   764 ;;      Locals:         1       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0
   766 ;;      Totals:         2       0       0       0       0
   767 ;;Total ram usage:        2 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; Hardware stack levels required when called: 1
   770 ;; This function calls:
   771 ;;		_clcd_write
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777     0712                     _clcd_print:	
   778                           ;psect for function _clcd_print
   779                           
   780                           
   781                           ;incstack = 0
   782                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   783                           ;clcd_print@str stored from wreg
   784     0712  00F5               	movwf	clcd_print@str
   785     0713                     l765:
   786                           
   787                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
   788     0713  01F0               	clrf	clcd_write@mode
   789     0714  0874               	movf	clcd_print@addr,w
   790     0715  120A  118A  2763  120A  118A  	fcall	_clcd_write
   791                           
   792                           ;clcd.c: 66:     while (*str != '\0')
   793     071A  2F2D               	goto	l771
   794     071B                     l767:
   795                           
   796                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
   797     071B  01F0               	clrf	clcd_write@mode
   798     071C  0AF0               	incf	clcd_write@mode,f
   799     071D  0875               	movf	clcd_print@str,w
   800     071E  0084               	movwf	4
   801     071F  120A  118A  2003  120A  118A  	fcall	stringdir
   802     0724  120A  118A  2763  120A  118A  	fcall	_clcd_write
   803     0729                     l769:
   804                           
   805                           ;clcd.c: 69:         str++;
   806     0729  3001               	movlw	1
   807     072A  00FF               	movwf	btemp+1
   808     072B  087F               	movf	btemp+1,w
   809     072C  07F5               	addwf	clcd_print@str,f
   810     072D                     l771:
   811                           
   812                           ;clcd.c: 66:     while (*str != '\0')
   813     072D  0875               	movf	clcd_print@str,w
   814     072E  0084               	movwf	4
   815     072F  120A  118A  2003  120A  118A  	fcall	stringdir
   816     0734  3A00               	xorlw	0
   817     0735  1D03               	skipz
   818     0736  2F38               	goto	u81
   819     0737  2F39               	goto	u80
   820     0738                     u81:
   821     0738  2F1B               	goto	l767
   822     0739                     u80:
   823     0739                     l32:
   824     0739  0008               	return
   825     073A                     __end_of_clcd_print:
   826                           
   827                           	psect	text6
   828     0763                     __ptext6:	
   829 ;; *************** function _clcd_write *****************
   830 ;; Defined at:
   831 ;;		line 4 in file "clcd.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  byte            1    wreg     unsigned char 
   834 ;;  mode            1    0[COMMON] unsigned char 
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  byte            1    3[COMMON] unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		wreg, status,2, status,0
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   846 ;;      Params:         1       0       0       0       0
   847 ;;      Locals:         1       0       0       0       0
   848 ;;      Temps:          2       0       0       0       0
   849 ;;      Totals:         4       0       0       0       0
   850 ;;Total ram usage:        4 bytes
   851 ;; Hardware stack levels used: 1
   852 ;; This function calls:
   853 ;;		Nothing
   854 ;; This function is called by:
   855 ;;		_init_display_controller
   856 ;;		_clcd_putch
   857 ;;		_clcd_print
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861     0763                     _clcd_write:	
   862                           ;psect for function _clcd_write
   863                           
   864                           
   865                           ;incstack = 0
   866                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
   867                           ;clcd_write@byte stored from wreg
   868     0763  00F3               	movwf	clcd_write@byte
   869     0764                     l711:
   870                           
   871                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = (__bit)mode;
   872     0764  1870               	btfsc	clcd_write@mode,0
   873     0765  2F67               	goto	u51
   874     0766  2F6B               	goto	u50
   875     0767                     u51:
   876     0767  1283               	bcf	3,5	;RP0=0, select bank0
   877     0768  1303               	bcf	3,6	;RP1=0, select bank0
   878     0769  1509               	bsf	9,2	;volatile
   879     076A  2F6E               	goto	u64
   880     076B                     u50:
   881     076B  1283               	bcf	3,5	;RP0=0, select bank0
   882     076C  1303               	bcf	3,6	;RP1=0, select bank0
   883     076D  1109               	bcf	9,2	;volatile
   884     076E                     u64:
   885     076E                     l713:
   886                           
   887                           ;clcd.c: 8:     PORTD = byte & 0xF0;
   888     076E  0873               	movf	clcd_write@byte,w
   889     076F  39F0               	andlw	240
   890     0770  0088               	movwf	8	;volatile
   891     0771                     l715:
   892                           
   893                           ;clcd.c: 9:     RE1 = 1;
   894     0771  1489               	bsf	9,1	;volatile
   895     0772                     l717:
   896                           
   897                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   898     0772  30A6               	movlw	166
   899     0773  00F1               	movwf	??_clcd_write
   900     0774                     u167:
   901     0774  0BF1               	decfsz	??_clcd_write,f
   902     0775  2F74               	goto	u167
   903     0776  0000               	nop
   904     0777                     l719:
   905                           
   906                           ;clcd.c: 11:     RE1 = 0;
   907     0777  1283               	bcf	3,5	;RP0=0, select bank0
   908     0778  1303               	bcf	3,6	;RP1=0, select bank0
   909     0779  1089               	bcf	9,1	;volatile
   910     077A                     l721:
   911                           
   912                           ;clcd.c: 13:     PORTD = (unsigned char)((byte & 0x0F) << 4);
   913     077A  0873               	movf	clcd_write@byte,w
   914     077B  390F               	andlw	15
   915     077C  00F1               	movwf	??_clcd_write
   916     077D  3003               	movlw	3
   917     077E                     u75:
   918     077E  1003               	clrc
   919     077F  0DF1               	rlf	??_clcd_write,f
   920     0780  3EFF               	addlw	-1
   921     0781  1D03               	skipz
   922     0782  2F7E               	goto	u75
   923     0783  1003               	clrc
   924     0784  0D71               	rlf	??_clcd_write,w
   925     0785  0088               	movwf	8	;volatile
   926     0786                     l723:
   927                           
   928                           ;clcd.c: 14:     RE1 = 1;
   929     0786  1489               	bsf	9,1	;volatile
   930     0787                     l725:
   931                           
   932                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   933     0787  30A6               	movlw	166
   934     0788  00F1               	movwf	??_clcd_write
   935     0789                     u177:
   936     0789  0BF1               	decfsz	??_clcd_write,f
   937     078A  2F89               	goto	u177
   938     078B  0000               	nop
   939     078C                     l727:
   940                           
   941                           ;clcd.c: 16:     RE1 = 0;
   942     078C  1283               	bcf	3,5	;RP0=0, select bank0
   943     078D  1303               	bcf	3,6	;RP1=0, select bank0
   944     078E  1089               	bcf	9,1	;volatile
   945     078F                     l729:
   946                           
   947                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   948     078F  301B               	movlw	27
   949     0790  00F2               	movwf	??_clcd_write+1
   950     0791  309E               	movlw	158
   951     0792  00F1               	movwf	??_clcd_write
   952     0793                     u187:
   953     0793  0BF1               	decfsz	??_clcd_write,f
   954     0794  2F93               	goto	u187
   955     0795  0BF2               	decfsz	??_clcd_write+1,f
   956     0796  2F93               	goto	u187
   957     0797  0000               	nop
   958     0798                     l17:
   959     0798  0008               	return
   960     0799                     __end_of_clcd_write:
   961     007E                     btemp	set	126	;btemp
   962     007E                     wtemp0	set	126
   963                           
   964                           	psect	idloc
   965                           
   966                           ;Config register IDLOC0 @ 0x2000
   967                           ;	unspecified, using default values
   968     2000                     	org	8192
   969     2000  3FFF               	dw	16383
   970                           
   971                           ;Config register IDLOC1 @ 0x2001
   972                           ;	unspecified, using default values
   973     2001                     	org	8193
   974     2001  3FFF               	dw	16383
   975                           
   976                           ;Config register IDLOC2 @ 0x2002
   977                           ;	unspecified, using default values
   978     2002                     	org	8194
   979     2002  3FFF               	dw	16383
   980                           
   981                           ;Config register IDLOC3 @ 0x2003
   982                           ;	unspecified, using default values
   983     2003                     	org	8195
   984     2003  3FFF               	dw	16383
   985                           
   986                           	psect	config
   987                           
   988                           ;Config register CONFIG @ 0x2007
   989                           ;	Oscillator Selection bits
   990                           ;	FOSC = 0x3, unprogrammed default
   991                           ;	Watchdog Timer Enable bit
   992                           ;	WDTE = OFF, WDT disabled
   993                           ;	Power-up Timer Enable bit
   994                           ;	PWRTE = 0x1, unprogrammed default
   995                           ;	Brown-out Reset Enable bit
   996                           ;	BOREN = 0x1, unprogrammed default
   997                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   998                           ;	LVP = 0x1, unprogrammed default
   999                           ;	Data EEPROM Memory Code Protection bit
  1000                           ;	CPD = 0x1, unprogrammed default
  1001                           ;	Flash Program Memory Write Enable bits
  1002                           ;	WRT = 0x3, unprogrammed default
  1003                           ;	In-Circuit Debugger Mode bit
  1004                           ;	DEBUG = 0x1, unprogrammed default
  1005                           ;	Flash Program Memory Code Protection bit
  1006                           ;	CP = 0x1, unprogrammed default
  1007     2007                     	org	8199
  1008     2007  3FFB               	dw	16379

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_clcd_print
    _main->_clcd_putch
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3187
                         _clcd_print
                         _clcd_putch
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     902
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1    1098
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           2     1      1    1187
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     902
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clcd_putch
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Sep 25 10:14:45 2023

                              pc 0002                   clcd_print@addr 0074                               l20 07FB  
                             l23 0700                               l32 0739                               l17 0798  
                             l41 06F5                               l26 0711                               l46 073F  
                             u50 076B                               u51 0767                               u64 076E  
                             u80 0739                               u81 0738                               u75 077E  
                             u97 079D                               fsr 0004                              l711 0764  
                            l721 077A                              l713 076E                              l723 0786  
                            l715 0771                              l731 0799                              l725 0787  
                            l717 0772                              l741 07C4                              l733 07A1  
                            l727 078C                              l719 0777                              l751 07EF  
                            l743 07C7                              l735 07A8                              l729 078F  
                            l753 07F6                              l745 07CE                              l737 07B8  
                            l761 06FB                              l771 072D                              l763 0702  
                            l747 07DA                              l739 07BD                              l755 06F6  
                            l765 0713                              l749 07DF                              l757 06F9  
                            l773 06F0                              l767 071B                              l759 06FA  
                            l775 073A                              l769 0729                              l777 0747  
                            l779 074F                              _RE1 0049                              _RE2 004A  
                            u107 07AC                              u117 07BA                              u127 07D0  
                            u137 07DC                              u147 07EA                              u157 07F8  
                            u167 0774                              u177 0789                              u187 0793  
                 clcd_putch@addr 0074                              fsr0 0004                   clcd_putch@data 0075  
                           STR_1 000F                             STR_2 0009                             _main 073A  
                           btemp 007E                             start 0000                   clcd_write@byte 0073  
                 clcd_write@mode 0070                            ?_main 0070                     ?_init_config 0070  
                          _PORTD 0008                            _TRISD 0088                            pclath 000A  
                          status 0003                            wtemp0 007E                  __initialization 07FC  
                   __end_of_main 0763                           ??_main 0076                           _TRISE1 0449  
                         _TRISE2 044A          _init_display_controller 0799          __end_of__initialization 07FC  
                 __pcstackCOMMON 0070        ??_init_display_controller 0074                       _clcd_print 0712  
                     _clcd_putch 0701                       _clcd_write 0763                       __pmaintext 073A  
                     __stringtab 0003                          __ptext1 06F0                          __ptext2 06F6  
                        __ptext3 0799                          __ptext4 0701                          __ptext5 0712  
                        __ptext6 0763  __end_of_init_display_controller 07FC                __end_of_init_clcd 0701  
           end_of_initialization 07FC                      ?_clcd_print 0074                      ?_clcd_putch 0074  
                    ?_clcd_write 0070                    clcd_print@str 0075              start_initialization 07FC  
                  ??_init_config 0076                        ___latbits 0002                        __pstrings 0003  
                      _init_clcd 06F6              __end_of_init_config 06F6         ?_init_display_controller 0070  
                   ??_clcd_print 0075                     ??_clcd_putch 0075                     ??_clcd_write 0071  
                    __stringbase 0008               __end_of_clcd_print 073A               __end_of_clcd_putch 0712  
             __end_of_clcd_write 0799                       ?_init_clcd 0070               __end_of__stringtab 0009  
                    _init_config 06F0                      ??_init_clcd 0076                        stringcode 0003  
                       stringdir 0003                         stringtab 0003  
