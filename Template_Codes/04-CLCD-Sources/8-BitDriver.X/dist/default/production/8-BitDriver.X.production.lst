

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jun 30 11:05:16 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0008                     _PORTD	set	8
   230  0049                     _RE1	set	73
   231  004A                     _RE2	set	74
   232  0088                     _TRISD	set	136
   233  0449                     _TRISE1	set	1097
   234  044A                     _TRISE2	set	1098
   235                           
   236                           	psect	strings
   237  0003                     __pstrings:	
   238  0003                     stringtab:	
   239  0003                     __stringtab:	
   240  0003                     stringcode:	
   241                           ;	String table - string pointers are 1 byte each
   242                           
   243  0003                     stringdir:	
   244  0003  3000               	movlw	high stringdir
   245  0004  008A               	movwf	10
   246  0005  0804               	movf	4,w
   247  0006  0A84               	incf	4,f
   248  0007  0782               	addwf	2,f
   249  0008                     __stringbase:	
   250  0008  3400               	retlw	0
   251  0009                     __end_of__stringtab:	
   252  0009                     STR_2:	
   253  0009  3457               	retlw	87	;'W'
   254  000A  346F               	retlw	111	;'o'
   255  000B  3472               	retlw	114	;'r'
   256  000C  346C               	retlw	108	;'l'
   257  000D  3464               	retlw	100	;'d'
   258  000E  3400               	retlw	0
   259  000F                     STR_1:	
   260  000F  3448               	retlw	72	;'H'
   261  0010  3465               	retlw	101	;'e'
   262  0011  346C               	retlw	108	;'l'
   263  0012  346C               	retlw	108	;'l'
   264  0013  346F               	retlw	111	;'o'
   265  0014  3400               	retlw	0
   266  0009                     
   267                           ; #config settings
   268  0000                     
   269                           	psect	cinit
   270  07FC                     start_initialization:	
   271  07FC                     __initialization:	
   272  07FC                     end_of_initialization:	
   273                           ;End of C runtime variable initialization code
   274                           
   275  07FC                     __end_of__initialization:	
   276  07FC  0183               	clrf	3
   277  07FD  120A  118A  2F78   	ljmp	_main	;jump to C main() function
   278                           
   279                           	psect	cstackCOMMON
   280  0070                     __pcstackCOMMON:	
   281  0070                     ?_init_clcd:	
   282  0070                     ?_init_config:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_main:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_clcd_write:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_init_display_controller:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     clcd_write@mode:	
   295                           ; 1 bytes @ 0x0
   296                           
   297                           
   298                           ; 1 bytes @ 0x0
   299  0070                     	ds	1
   300  0071                     ??_clcd_write:	
   301                           
   302                           ; 1 bytes @ 0x1
   303  0071                     	ds	2
   304  0073                     clcd_write@byte:	
   305                           
   306                           ; 1 bytes @ 0x3
   307  0073                     	ds	1
   308  0074                     ?_clcd_print:	
   309  0074                     ??_init_display_controller:	
   310                           ; 1 bytes @ 0x4
   311                           
   312  0074                     clcd_print@addr:	
   313                           ; 1 bytes @ 0x4
   314                           
   315                           
   316                           ; 1 bytes @ 0x4
   317  0074                     	ds	1
   318  0075                     ??_clcd_print:	
   319                           
   320                           ; 1 bytes @ 0x5
   321  0075                     	ds	1
   322  0076                     ??_init_clcd:	
   323  0076                     ??_init_config:	
   324                           ; 1 bytes @ 0x6
   325                           
   326  0076                     clcd_print@str:	
   327                           ; 1 bytes @ 0x6
   328                           
   329                           
   330                           ; 1 bytes @ 0x6
   331  0076                     	ds	1
   332  0077                     ??_main:	
   333                           
   334                           ; 1 bytes @ 0x7
   335  0077                     	ds	1
   336                           
   337                           	psect	maintext
   338  0778                     __pmaintext:	
   339 ;;
   340 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   341 ;;
   342 ;; *************** function _main *****************
   343 ;; Defined at:
   344 ;;		line 14 in file "main.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;		None
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : B00/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   358 ;;      Params:         0       0       0       0       0
   359 ;;      Locals:         0       0       0       0       0
   360 ;;      Temps:          1       0       0       0       0
   361 ;;      Totals:         1       0       0       0       0
   362 ;;Total ram usage:        1 bytes
   363 ;; Hardware stack levels required when called:    4
   364 ;; This function calls:
   365 ;;		_clcd_print
   366 ;;		_init_config
   367 ;; This function is called by:
   368 ;;		Startup code after reset
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           
   373                           ;psect for function _main
   374  0778                     _main:	
   375  0778                     l743:	
   376                           ;incstack = 0
   377                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   378                           
   379  0778  120A  118A  271F  120A  118A  	fcall	_init_config
   380  077D                     l745:	
   381  077D  3080               	movlw	128
   382  077E  00F7               	movwf	??_main
   383  077F  0877               	movf	??_main,w
   384  0780  00F4               	movwf	clcd_print@addr
   385  0781  3007               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   386  0782  120A  118A  2750  120A  118A  	fcall	_clcd_print
   387  0787                     l747:	
   388  0787  30C0               	movlw	192
   389  0788  00F7               	movwf	??_main
   390  0789  0877               	movf	??_main,w
   391  078A  00F4               	movwf	clcd_print@addr
   392  078B  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   393  078C  120A  118A  2750  120A  118A  	fcall	_clcd_print
   394  0791                     l749:	
   395  0791  3090               	movlw	144
   396  0792  00F7               	movwf	??_main
   397  0793  0877               	movf	??_main,w
   398  0794  00F4               	movwf	clcd_print@addr
   399  0795  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   400  0796  120A  118A  2750  120A  118A  	fcall	_clcd_print
   401  079B                     l751:	
   402  079B  30D0               	movlw	208
   403  079C  00F7               	movwf	??_main
   404  079D  0877               	movf	??_main,w
   405  079E  00F4               	movwf	clcd_print@addr
   406  079F  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   407  07A0  120A  118A  2750  120A  118A  	fcall	_clcd_print
   408  07A5  2F7D               	goto	l745
   409  07A6  120A  118A  2800   	ljmp	start
   410  07A9                     __end_of_main:	
   411                           
   412                           	psect	text1
   413  071F                     __ptext1:	
   414 ;; *************** function _init_config *****************
   415 ;; Defined at:
   416 ;;		line 10 in file "main.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0, pclath, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   430 ;;      Params:         0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0
   432 ;;      Temps:          0       0       0       0       0
   433 ;;      Totals:         0       0       0       0       0
   434 ;;Total ram usage:        0 bytes
   435 ;; Hardware stack levels used:    1
   436 ;; Hardware stack levels required when called:    3
   437 ;; This function calls:
   438 ;;		_init_clcd
   439 ;; This function is called by:
   440 ;;		_main
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           
   445                           ;psect for function _init_config
   446  071F                     _init_config:	
   447  071F                     l733:	
   448                           ;incstack = 0
   449                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   450                           
   451                           
   452                           ;main.c: 11:         clcd_print("World", (0xD0 + 0));
   453  071F  120A  118A  2725  120A  118A  	fcall	_init_clcd
   454  0724                     l7:	
   455  0724  0008               	return
   456  0725                     __end_of_init_config:	
   457                           
   458                           	psect	text2
   459  0725                     __ptext2:	
   460 ;; *************** function _init_clcd *****************
   461 ;; Defined at:
   462 ;;		line 36 in file "clcd.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0
   479 ;;      Totals:         0       0       0       0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels used:    1
   482 ;; Hardware stack levels required when called:    2
   483 ;; This function calls:
   484 ;;		_init_display_controller
   485 ;; This function is called by:
   486 ;;		_init_config
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           
   491                           ;psect for function _init_clcd
   492  0725                     _init_clcd:	
   493  0725                     l725:	
   494                           ;incstack = 0
   495                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
   496                           
   497                           
   498                           ;clcd.c: 39:     TRISD = 0x00;
   499  0725  1683               	bsf	3,5	;RP0=1, select bank1
   500  0726  1303               	bcf	3,6	;RP1=0, select bank1
   501  0727  0188               	clrf	8	;volatile
   502  0728                     l727:	
   503                           
   504                           ;clcd.c: 42:     TRISE2 = 0;
   505  0728  1109               	bcf	9,2	;volatile
   506  0729                     l729:	
   507                           
   508                           ;clcd.c: 43:     TRISE1 = 0;
   509  0729  1089               	bcf	9,1	;volatile
   510  072A                     l731:	
   511                           
   512                           ;clcd.c: 45:     init_display_controller();
   513  072A  120A  118A  27A9  120A  118A  	fcall	_init_display_controller
   514  072F                     l38:	
   515  072F  0008               	return
   516  0730                     __end_of_init_clcd:	
   517                           
   518                           	psect	text3
   519  07A9                     __ptext3:	
   520 ;; *************** function _init_display_controller *****************
   521 ;; Defined at:
   522 ;;		line 16 in file "clcd.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0, pclath, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   536 ;;      Params:         0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0
   538 ;;      Temps:          2       0       0       0       0
   539 ;;      Totals:         2       0       0       0       0
   540 ;;Total ram usage:        2 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    1
   543 ;; This function calls:
   544 ;;		_clcd_write
   545 ;; This function is called by:
   546 ;;		_init_clcd
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           
   551                           ;psect for function _init_display_controller
   552  07A9                     _init_display_controller:	
   553  07A9                     l705:	
   554                           ;incstack = 0
   555                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   556                           
   557                           
   558                           ;clcd.c: 19:     _delay((unsigned long)((30)*(20000000/4000.0)));
   559  07A9  30C3               	movlw	195
   560  07AA  00F5               	movwf	??_init_display_controller+1
   561  07AB  30CD               	movlw	205
   562  07AC  00F4               	movwf	??_init_display_controller
   563  07AD                     u77:	
   564  07AD  0BF4               	decfsz	??_init_display_controller,f
   565  07AE  2FAD               	goto	u77
   566  07AF  0BF5               	decfsz	??_init_display_controller+1,f
   567  07B0  2FAD               	goto	u77
   568  07B1                     l707:	
   569                           
   570                           ;clcd.c: 22:     clcd_write(0x33, 0);
   571  07B1  01F0               	clrf	clcd_write@mode
   572  07B2  3033               	movlw	51
   573  07B3  120A  118A  2730  120A  118A  	fcall	_clcd_write
   574  07B8                     l709:	
   575                           
   576                           ;clcd.c: 23:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   577  07B8  301B               	movlw	27
   578  07B9  00F5               	movwf	??_init_display_controller+1
   579  07BA  309E               	movlw	158
   580  07BB  00F4               	movwf	??_init_display_controller
   581  07BC                     u87:	
   582  07BC  0BF4               	decfsz	??_init_display_controller,f
   583  07BD  2FBC               	goto	u87
   584  07BE  0BF5               	decfsz	??_init_display_controller+1,f
   585  07BF  2FBC               	goto	u87
   586  07C0  0000               	nop
   587                           
   588                           ;clcd.c: 24:     clcd_write(0x33, 0);
   589  07C1  01F0               	clrf	clcd_write@mode
   590  07C2  3033               	movlw	51
   591  07C3  120A  118A  2730  120A  118A  	fcall	_clcd_write
   592  07C8                     l711:	
   593                           
   594                           ;clcd.c: 25:      _delay((unsigned long)((100)*(20000000/4000000.0)));
   595  07C8  30A6               	movlw	166
   596  07C9  00F4               	movwf	??_init_display_controller
   597  07CA                     u97:	
   598  07CA  0BF4               	decfsz	??_init_display_controller,f
   599  07CB  2FCA               	goto	u97
   600  07CC  0000               	nop
   601  07CD                     l713:	
   602                           
   603                           ;clcd.c: 26:     clcd_write(0x33, 0);
   604  07CD  01F0               	clrf	clcd_write@mode
   605  07CE  3033               	movlw	51
   606  07CF  120A  118A  2730  120A  118A  	fcall	_clcd_write
   607  07D4                     l715:	
   608                           
   609                           ;clcd.c: 27:     _delay((unsigned long)((1)*(20000000/4000000.0)));
   610  07D4  2FD5               	nop2	;2 cycle nop
   611  07D5  2FD6               	nop2	;2 cycle nop
   612  07D6  0000               	nop
   613  07D7                     l717:	
   614                           
   615                           ;clcd.c: 28:     clcd_write(0x30, 0);
   616  07D7  01F0               	clrf	clcd_write@mode
   617  07D8  3030               	movlw	48
   618  07D9  120A  118A  2730  120A  118A  	fcall	_clcd_write
   619  07DE                     l719:	
   620                           
   621                           ;clcd.c: 29:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   622  07DE  30A6               	movlw	166
   623  07DF  00F4               	movwf	??_init_display_controller
   624  07E0                     u107:	
   625  07E0  0BF4               	decfsz	??_init_display_controller,f
   626  07E1  2FE0               	goto	u107
   627  07E2  0000               	nop
   628                           
   629                           ;clcd.c: 30:     clcd_write(0x01, 0);
   630  07E3  01F0               	clrf	clcd_write@mode
   631  07E4  3001               	movlw	1
   632  07E5  120A  118A  2730  120A  118A  	fcall	_clcd_write
   633  07EA                     l721:	
   634                           
   635                           ;clcd.c: 31:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   636  07EA  30A6               	movlw	166
   637  07EB  00F4               	movwf	??_init_display_controller
   638  07EC                     u117:	
   639  07EC  0BF4               	decfsz	??_init_display_controller,f
   640  07ED  2FEC               	goto	u117
   641  07EE  0000               	nop
   642  07EF                     l723:	
   643                           
   644                           ;clcd.c: 32:     clcd_write(0x0C, 0);
   645  07EF  01F0               	clrf	clcd_write@mode
   646  07F0  300C               	movlw	12
   647  07F1  120A  118A  2730  120A  118A  	fcall	_clcd_write
   648                           
   649                           ;clcd.c: 33:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   650  07F6  30A6               	movlw	166
   651  07F7  00F4               	movwf	??_init_display_controller
   652  07F8                     u127:	
   653  07F8  0BF4               	decfsz	??_init_display_controller,f
   654  07F9  2FF8               	goto	u127
   655  07FA  0000               	nop
   656  07FB                     l35:	
   657  07FB  0008               	return
   658  07FC                     __end_of_init_display_controller:	
   659                           
   660                           	psect	text4
   661  0750                     __ptext4:	
   662 ;; *************** function _clcd_print *****************
   663 ;; Defined at:
   664 ;;		line 54 in file "clcd.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;  str             1    wreg     PTR const unsigned char 
   667 ;;		 -> STR_4(6), STR_3(6), STR_2(6), STR_1(6), 
   668 ;;  addr            1    4[COMMON] unsigned char 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  str             1    6[COMMON] PTR const unsigned char 
   671 ;;		 -> STR_4(6), STR_3(6), STR_2(6), STR_1(6), 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         1       0       0       0       0
   682 ;;      Locals:         1       0       0       0       0
   683 ;;      Temps:          1       0       0       0       0
   684 ;;      Totals:         3       0       0       0       0
   685 ;;Total ram usage:        3 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    1
   688 ;; This function calls:
   689 ;;		_clcd_write
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _clcd_print
   697  0750                     _clcd_print:	
   698                           
   699                           ;incstack = 0
   700                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   701                           ;clcd_print@str stored from wreg
   702  0750  00F6               	movwf	clcd_print@str
   703  0751                     l735:	
   704                           
   705                           ;clcd.c: 54: void clcd_print(const char *str, unsigned char addr);clcd.c: 55: {;clcd.c: 
      +                          56:     clcd_write(addr, 0);
   706  0751  01F0               	clrf	clcd_write@mode
   707  0752  0874               	movf	clcd_print@addr,w
   708  0753  120A  118A  2730  120A  118A  	fcall	_clcd_write
   709                           
   710                           ;clcd.c: 58:     while (*str != '\0')
   711  0758  2F6B               	goto	l741
   712  0759                     l737:	
   713                           
   714                           ;clcd.c: 59:     {;clcd.c: 60:         clcd_write(*str, 1);
   715  0759  01F0               	clrf	clcd_write@mode
   716  075A  0AF0               	incf	clcd_write@mode,f
   717  075B  0876               	movf	clcd_print@str,w
   718  075C  0084               	movwf	4
   719  075D  120A  118A  2003  120A  118A  	fcall	stringdir
   720  0762  120A  118A  2730  120A  118A  	fcall	_clcd_write
   721  0767                     l739:	
   722                           
   723                           ;clcd.c: 61:         str++;
   724  0767  3001               	movlw	1
   725  0768  00F5               	movwf	??_clcd_print
   726  0769  0875               	movf	??_clcd_print,w
   727  076A  07F6               	addwf	clcd_print@str,f
   728  076B                     l741:	
   729                           
   730                           ;clcd.c: 58:     while (*str != '\0')
   731  076B  0876               	movf	clcd_print@str,w
   732  076C  0084               	movwf	4
   733  076D  120A  118A  2003  120A  118A  	fcall	stringdir
   734  0772  3A00               	xorlw	0
   735  0773  1D03               	skipz
   736  0774  2F76               	goto	u61
   737  0775  2F77               	goto	u60
   738  0776                     u61:	
   739  0776  2F59               	goto	l737
   740  0777                     u60:	
   741  0777                     l47:	
   742  0777  0008               	return
   743  0778                     __end_of_clcd_print:	
   744                           
   745                           	psect	text5
   746  0730                     __ptext5:	
   747 ;; *************** function _clcd_write *****************
   748 ;; Defined at:
   749 ;;		line 4 in file "clcd.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  byte            1    wreg     unsigned char 
   752 ;;  mode            1    0[COMMON] unsigned char 
   753 ;; Auto vars:     Size  Location     Type
   754 ;;  byte            1    3[COMMON] unsigned char 
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   764 ;;      Params:         1       0       0       0       0
   765 ;;      Locals:         1       0       0       0       0
   766 ;;      Temps:          2       0       0       0       0
   767 ;;      Totals:         4       0       0       0       0
   768 ;;Total ram usage:        4 bytes
   769 ;; Hardware stack levels used:    1
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_init_display_controller
   774 ;;		_clcd_print
   775 ;;		_clcd_putch
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           
   780                           ;psect for function _clcd_write
   781  0730                     _clcd_write:	
   782                           
   783                           ;incstack = 0
   784                           ; Regs used in _clcd_write: [wreg]
   785                           ;clcd_write@byte stored from wreg
   786  0730  00F3               	movwf	clcd_write@byte
   787  0731                     l697:	
   788                           
   789                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = mode;
   790  0731  1870               	btfsc	clcd_write@mode,0
   791  0732  2F34               	goto	u41
   792  0733  2F38               	goto	u40
   793  0734                     u41:	
   794  0734  1283               	bcf	3,5	;RP0=0, select bank0
   795  0735  1303               	bcf	3,6	;RP1=0, select bank0
   796  0736  1509               	bsf	9,2	;volatile
   797  0737  2F3B               	goto	u54
   798  0738                     u40:	
   799  0738  1283               	bcf	3,5	;RP0=0, select bank0
   800  0739  1303               	bcf	3,6	;RP1=0, select bank0
   801  073A  1109               	bcf	9,2	;volatile
   802  073B                     u54:	
   803  073B                     l699:	
   804                           
   805                           ;clcd.c: 7:     PORTD = byte;
   806  073B  0873               	movf	clcd_write@byte,w
   807  073C  0088               	movwf	8	;volatile
   808  073D                     l701:	
   809                           
   810                           ;clcd.c: 9:     RE1 = 1;
   811  073D  1489               	bsf	9,1	;volatile
   812                           
   813                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   814  073E  30A6               	movlw	166
   815  073F  00F1               	movwf	??_clcd_write
   816  0740                     u137:	
   817  0740  0BF1               	decfsz	??_clcd_write,f
   818  0741  2F40               	goto	u137
   819  0742  0000               	nop
   820  0743                     l703:	
   821                           
   822                           ;clcd.c: 11:     RE1 = 0;
   823  0743  1283               	bcf	3,5	;RP0=0, select bank0
   824  0744  1303               	bcf	3,6	;RP1=0, select bank0
   825  0745  1089               	bcf	9,1	;volatile
   826                           
   827                           ;clcd.c: 13:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   828  0746  301B               	movlw	27
   829  0747  00F2               	movwf	??_clcd_write+1
   830  0748  309E               	movlw	158
   831  0749  00F1               	movwf	??_clcd_write
   832  074A                     u147:	
   833  074A  0BF1               	decfsz	??_clcd_write,f
   834  074B  2F4A               	goto	u147
   835  074C  0BF2               	decfsz	??_clcd_write+1,f
   836  074D  2F4A               	goto	u147
   837  074E  0000               	nop
   838  074F                     l32:	
   839  074F  0008               	return
   840  0750                     __end_of_clcd_write:	
   841  007E                     btemp	set	126	;btemp
   842  007E                     wtemp0	set	126


Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_clcd_print
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2111
                                              7 COMMON     1     1      0
                         _clcd_print
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     804
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     804
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     804
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     2      1    1307
                                              4 COMMON     3     2      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     804
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jun 30 11:05:16 2021

                               l7 0724                                 pc 0002                    clcd_print@addr 0074  
__size_of_init_display_controller 0053                                l32 074F                                l35 07FB  
                              l38 072F                                l47 0777                                u40 0738  
                              u41 0734                                u60 0777                                u61 0776  
                              u54 073B                                u77 07AD                                u87 07BC  
                              u97 07CA                                fsr 0004                               l701 073D  
                             l703 0743                               l711 07C8                               l721 07EA  
                             l713 07CD                               l705 07A9                               l723 07EF  
                             l715 07D4                               l707 07B1                               l731 072A  
                             l741 076B                               l717 07D7                               l709 07B8  
                             l725 0725                               l733 071F                               l735 0751  
                             l719 07DE                               l727 0728                               l751 079B  
                             l743 0778                               l737 0759                               l729 0729  
                             l745 077D                               l739 0767                               l747 0787  
                             l749 0791                               l697 0731                               l699 073B  
                             _RE1 0049                               _RE2 004A                               u107 07E0  
                             u117 07EC                               u127 07F8                               u137 0740  
                             u147 074A                               fsr0 0004                              STR_1 000F  
                            STR_2 0009                              STR_3 0009                              STR_4 0009  
                            _main 0778                              btemp 007E                              start 0000  
                  clcd_write@byte 0073                    clcd_write@mode 0070                             ?_main 0070  
                   __CFG_WDTE$OFF 0000                      ?_init_config 0070                             _PORTD 0008  
                           _TRISD 0088                             pclath 000A                             status 0003  
                           wtemp0 007E                   __initialization 07FC                      __end_of_main 07A9  
                          ??_main 0077                            _TRISE1 0449                            _TRISE2 044A  
         _init_display_controller 07A9           __end_of__initialization 07FC                    __pcstackCOMMON 0070  
            __size_of_init_config 0006                __size_of_init_clcd 000B         ??_init_display_controller 0074  
                      _clcd_print 0750                        _clcd_write 0730                        __pmaintext 0778  
                      __stringtab 0003                           __ptext1 071F                           __ptext2 0725  
                         __ptext3 07A9                           __ptext4 0750                           __ptext5 0730  
 __end_of_init_display_controller 07FC                 __end_of_init_clcd 0730              end_of_initialization 07FC  
                     ?_clcd_print 0074                       ?_clcd_write 0070                     clcd_print@str 0076  
             start_initialization 07FC               __size_of_clcd_print 0028               __size_of_clcd_write 0020  
                   ??_init_config 0076                         ___latbits 0002                         __pstrings 0003  
                       _init_clcd 0725               __end_of_init_config 0725          ?_init_display_controller 0070  
                    ??_clcd_print 0075                      ??_clcd_write 0071                       __stringbase 0008  
              __end_of_clcd_print 0778                __end_of_clcd_write 0750                        ?_init_clcd 0070  
              __end_of__stringtab 0009                       _init_config 071F                     __size_of_main 0031  
                     ??_init_clcd 0076                         stringcode 0003                          stringdir 0003  
                        stringtab 0003  
